--- a/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
+++ b/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
@@ -12,10 +_,7 @@
 import java.io.IOException;
 import java.io.UncheckedIOException;
 import java.io.Writer;
-import java.util.List;
-import java.util.Queue;
-import java.util.Set;
-import java.util.UUID;
+import java.util.*;
 import java.util.function.Consumer;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
@@ -33,7 +_,7 @@
    static final Logger f_157490_ = LogManager.getLogger();
    final Set<UUID> f_157491_ = Sets.newHashSet();
    final LevelCallback<T> f_157492_;
-   private final EntityPersistentStorage<T> f_157493_;
+   public final EntityPersistentStorage<T> f_157493_;
    private final EntityLookup<T> f_157494_;
    final EntitySectionStorage<T> f_157495_;
    private final LevelEntityGetter<T> f_157496_;
@@ -72,7 +_,16 @@
       return this.m_157538_(p_157534_, false);
    }
 
+   public boolean addNewEntityWithoutEvent(T entity) {
+      return this.addEntityWithoutEvent(entity, false);
+   }
+
    private boolean m_157538_(T p_157539_, boolean p_157540_) {
+      if (p_157539_ instanceof Entity entity && net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(entity, entity.f_19853_, p_157540_))) return false;
+      return addEntityWithoutEvent(p_157539_, p_157540_);
+   }
+
+   private boolean addEntityWithoutEvent(T p_157539_, boolean p_157540_) {
       if (!this.m_157557_(p_157539_)) {
          return false;
       } else {
@@ -178,7 +_,7 @@
       });
    }
 
-   private void m_157555_(long p_157556_) {
+   public void m_157555_(long p_157556_) {
       PersistentEntitySectionManager.ChunkLoadStatus persistententitysectionmanager$chunkloadstatus = this.f_157498_.get(p_157556_);
       if (persistententitysectionmanager$chunkloadstatus == PersistentEntitySectionManager.ChunkLoadStatus.FRESH) {
          this.m_157562_(p_157556_);
@@ -301,7 +_,15 @@
    }
 
    public void close() throws IOException {
-      this.m_157561_();
+      // CraftBukkit start - add save boolean
+      close(true);
+   }
+
+   public void close(boolean save) throws IOException {
+      if (save) {
+         this.m_157561_();
+      }
+      // CraftBukkit end
       this.f_157493_.close();
    }
 
@@ -348,13 +_,25 @@
       return this.f_157491_.size() + "," + this.f_157494_.m_156821_() + "," + this.f_157495_.m_156887_() + "," + this.f_157498_.size() + "," + this.f_157497_.size() + "," + this.f_157500_.size() + "," + this.f_157499_.size();
    }
 
+   // CraftBukkit start - add method to get all entities in chunk
+   public List<Entity> getEntities(ChunkPos chunkCoordIntPair) {
+      return f_157495_.m_156888_(chunkCoordIntPair.m_45588_()).flatMap(EntitySection::m_156845_).map(entiy -> (Entity) entiy).collect(Collectors.toList());
+   }
+
+   public boolean isPending(long pair) {
+      return f_157498_.get(pair) == ChunkLoadStatus.PENDING;
+   }
+   // CraftBukkit end
+
    class Callback implements EntityInLevelCallback {
       private final T f_157609_;
+      private final Entity realEntity;
       private long f_157610_;
       private EntitySection<T> f_157611_;
 
       Callback(T p_157614_, long p_157615_, EntitySection<T> p_157616_) {
          this.f_157609_ = p_157614_;
+         this.realEntity = p_157614_ instanceof Entity ? (Entity) p_157614_ : null;
          this.f_157610_ = p_157615_;
          this.f_157611_ = p_157616_;
       }
@@ -371,9 +_,11 @@
             PersistentEntitySectionManager.this.m_157509_(this.f_157610_, this.f_157611_);
             EntitySection<T> entitysection = PersistentEntitySectionManager.this.f_157495_.m_156893_(i);
             entitysection.m_156840_(this.f_157609_);
+            long oldSectionKey = f_157610_;
             this.f_157611_ = entitysection;
             this.f_157610_ = i;
             this.m_157620_(visibility, entitysection.m_156848_());
+            if (this.realEntity != null) net.minecraftforge.common.ForgeHooks.onEntityEnterSection(this.realEntity, oldSectionKey, i);
          }
 
       }
